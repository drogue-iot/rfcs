openapi: 3.0.0
info:
  title: Drogue Cloud API Specification
  version: 0.5.0

tags:
  -  name: App administration
     description: Manage apps members and authorizations.
  - name: Registry
    description: Manage Apps and devices in the registry.
  - name: Command & Control
    description: Send commands to devices and check the results.
  - name: Command Polling
    description: As a device, retrieve commands and submit the result.
paths:
  /api/registry/v1alpha1/apps/ :
    get:
      tags:
        - Registry
      description: Return all the apps the user has access to
      parameters:
        - $ref: '#/components/parameters/AppIdList'
          required: false
        - $ref: '#/components/parameters/Labels'
      responses:
        200:
          description: A list of apps.
        401:
          description: Unauthorized.
    post:
      tags:
        - Registry
      description: create new apps.
      requestBody:
        description: The spec section of the app to add
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/App'
      responses:
        201:
          description: If the app is created
        409:
          description: If the app id is already used.
  /api/registry/v1alpha1/apps/{appId} :
    parameters:
      - $ref: '#/components/parameters/AppId'
    get:
      tags:
        - Registry
      description: Return app details.
      responses:
        200:
          description: The data of the app
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/App'
        404:
          description: If requested app do not exist or if the user has not access to it.
    put:
      tags:
        - Registry
      description: update existing app
      parameters:
        - $ref: '#/components/parameters/ResourceVersion'
      requestBody:
        description: The spec section of the app to update
        required: true
        content:
            'application/json':
              schema:
                $ref: '#/components/schemas/App'
      responses:
            204:
              description: If the app is updated
            404:
              description: If requested apps do not exits or if the user has not access to them.
    delete:
      tags:
        - Registry
      description: Delete existing app
      parameters:
        - $ref: '#/components/parameters/ResourceVersion'
      responses:
        204:
          description: If the app is deleted
        404:
          description: If requested apps do not exits or if the user has not access to them.
    patch:
      tags:
        - Registry
      description: Patch existing app
      parameters:
        - $ref: '#/components/parameters/ResourceVersion'
      requestBody:
        description: The json patch to apply
        required: true
        content:
          application/json :
            example:
              [
              { "op": "replace", "path": "/baz", "value": "boo" },
              { "op": "add", "path": "/hello", "value": ["world"] },
              { "op": "remove", "path": "/foo" }
              ]
      responses:
        204:
          description: If the app is updated
        404:
          description: If requested apps do not exits or if the user has not access to them.
          
  /api/admin/v1alpha1/apps/{appId}:
    parameters:
      - $ref: '#/components/parameters/AppId'
    get:
      tags:
        - App administration
      description: Return app administration details.
      responses:
        200:
          description: The data of the app
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/App'
        404:
          description: If requested app do not exist or if the user has not access to it.
    put:
      tags:
        - App administration
      description: update existing app admin object
      parameters:
        - $ref: '#/components/parameters/ResourceVersion'
      requestBody:
        description: The spec section of the app to update
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/App'
      responses:
        204:
          description: If the app is updated
        404:
          description: If requested apps do not exits or if the user has not access to them.      

  /api/command/v1alpha1/apps/{appId}/devices/{deviceId}:
    parameters:
      - $ref: '#/components/parameters/AppId'
      - $ref: '#/components/parameters/DeviceId'
    post:
      tags:
        - Command & Control
      description: Send one way commands to devices.
      parameters:
        - name: command
          required: true
          in: query
          schema:
            $ref: '#/components/schemas/CommandObject'
          description: Command to execute
        - name: timeout
          required: false
          in: query
          description: Set amount of time in seconds to wait for the command response from the device.
          schema:
            $ref: '#/components/schemas/Timeout'
      requestBody:
        description: Optional payload for the command
        required: false
        content:
          'application/json':
            example: {"set-temp": 40}
      responses:
        202:
          description: |
            Optional payload of the command response.
            With external integration (like ttn) then it's anything the integration point returns.
        401:
          description: Invalid authentication.
        404:
          description: Device or app not found.
        406:
          description: Device is not found or disabled.

  /api/command/v1alpha1/inbox/apps/{appId}/devices/{deviceId}:
    parameters:
      - $ref: '#/components/parameters/AppId'
      - $ref: '#/components/parameters/DeviceId'
    get:
      tags:
        - Command Polling
      description: Explicitly wait for commands
      parameters:
        - name: timeout
          required: false
          in: query
          description: Wait for commands for specified amount of time in seconds.
          schema:
            $ref: '#/components/schemas/Timeout'
      responses:
        200:
          description: The response contain a command.
          headers:
            Command:
              description: Command to be executed
              schema:
                type: object
            Request:
              required: false
              description: Request identifier used to correlate response with.
              schema:
                type: string
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CommandObject'
        404:
          description: No command available.

  /api/command/v1alpha1/outbox/apps/{appId}/devices/{deviceId}:
    parameters:
      - $ref: '#/components/parameters/AppId'
      - $ref: '#/components/parameters/DeviceId'
    post:
      tags:
        - Command Polling
      description: Send a command result.
      parameters:
        - name: request
          required: false
          in: query
          description: Request identifier used to correlate response with.
          schema:
            type: string
        - name: status
          required: true
          in: query
          description: Status code of commands execution.
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            example:
              {error: light disconnected}
        description: Optional payload for the command response
      responses:
        200:
          description: Command result saved.

components:

  parameters:
    #  $ref: '#/components/parameters/AppId'
    AppId:
      name: appId
      in: path
      required: true
      description: The Application ID.
      schema:
        type: string
        description: Must be DNS labels as defined by RFC1123
    #  $ref: '#/components/parameters/DeviceId'
    DeviceId:
      name: deviceId
      in: path
      required: true
      description: The device ID.
      schema:
        type: string
        maxLength: 255
        description: Must conform to UTF-8
    Channel:
      name: channel
      in: path
      required: true
      description: The kafka channel to publish the data in.
      schema:
        type: string
        description: A valid Kafka channel name.
    ResourceVersion:
      name: resource-version
      in: query
      required: false
      description: The resource version of the existing data, for optimistic locking.
      schema:
        type: string
        description: A resource version identifier, usually a uuid.
    AppIdList:
      name: app-id
      in: query
      description: A comma separated list of the apps ids to retrieve
      schema:
        items:
          type: string
    Labels:
      name: labels
      in: query
      required: false
      description: A list of labels to filter the list.
      schema:
        items:
          type: string
          description: A label associated to the resource.


  schemas:
    App:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        spec:
          $ref: '#/components/schemas/AppSpec'

    AppSpec:
      type: object
      additionalProperties: true
      description: A json object containing whatever data needs to be attached to an app.

    AppArray:
      type: array
      items:
        $ref: '#/components/schemas/App'

    BulkAppResponseArray:
      type: array
      items:
        $ref: '#/components/schemas/BulkAppResponse'

    BulkAppResponse:
      type: object
      additionalProperties: true
      example:
        myApp:
          status: 200 OK
          resource-version: 8ee26746-993c-11eb-b22a-b42e99fb4a70

    CommandObject:
      type: object
      additionalProperties: true
      description: The command to execute.
      example:
        set-temp: 21
        set-light-color: FDF4DC

    Timeout:
      type: integer
      example: 30

    TelemetryData:
      type: object
      additionalProperties: true
      example:
        temp: 19
        luminosity: 55


  responses:
      BulkAppCreationResponse:
        description: A JSON key/value map where each key is the id of the requested app creation and value contains the outcome.
        content:
          'application/json' :
            schema:
              $ref: '#/components/schemas/BulkAppResponseArray'


